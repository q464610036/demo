# \u5E94\u7528\u670D\u52A1 WEB \u8BBF\u95EE\u7AEF\u53E3
server.port=8080

spring.profiles.active=dev


#============================== mybatis-plus ==============================
#\u914D\u7F6E\u8D77\u522B\u540D\u7684\u5305
mybatis-plus.type-aliases-package=com.example.shardingjdbc.module.entity
#\u914D\u7F6E\u6620\u5C04\u6587\u4EF6\u7684\u8DEF\u5F84
mybatis-plus.mapper-locations=mapper/**.xml
#\u6253\u5370sq1\u65E5\u5FD7
mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
#\u914D\u7F6E Date \u8F6C\u4E3A \u5B57\u7B26\u4E32
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
# \u65F6\u95F4\u4E3A\u4E1C\u516B\u533A
spring.jackson.time-zone=GMT+8
# MP\u903B\u8F91\u5220\u9664\u7684\u5168\u5C40\u914D\u7F6E
# \u5168\u5C40\u903B\u8F91\u5220\u9664\u7684\u5B9E\u4F53\u5C55\u6027\u540D
mybatis-plus.global-config.db-config.logic-delete-field=deleted_flag
# \u903B\u8F91\u5DF2\u8B1D\u9664\u503C(\u9ED8\u8BA4\u4E3A 1)
mybatis-plus.global-config.db-config.logic-delete-value=1
#\u903B\u8F91\u672A\u8137\u9664\u503C(\u9ED8\u8BA4\u4E3A 0)
mybatis-plus.global-config.db-config.logic-not-delete-value=0

#============================== sharding-jdbc \u914D\u7F6E\u771F\u5B9E\u6570\u636E\u6E90 ==============================
spring.shardingsphere.datasource.names=db_user,db_order0,db_order1

spring.shardingsphere.datasource.db_user.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.db_user.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.db_user.jdbc-url=jdbc:mysql://localhost:3306/sharding_user
spring.shardingsphere.datasource.db_user.username=root
spring.shardingsphere.datasource.db_user.password=admin

spring.shardingsphere.datasource.db_order0.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.db_order0.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.db_order0.jdbc-url=jdbc:mysql://localhost:3306/sharding_order0
spring.shardingsphere.datasource.db_order0.username=root
spring.shardingsphere.datasource.db_order0.password=admin

spring.shardingsphere.datasource.db_order1.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.db_order1.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.db_order1.jdbc-url=jdbc:mysql://localhost:3306/sharding_order1
spring.shardingsphere.datasource.db_order1.username=root
spring.shardingsphere.datasource.db_order1.password=admin


#============================== sharding-jdbc \u5206\u5E93\u5206\u8868\u914D\u7F6E ==============================
#------------------- sharding-jdbc \u6807\u51C6\u5206\u7247\u8868\u914D\u7F6E\uFF08\u5E93\u548C\u8868\u7684\u5212\u5206\uFF0C\u603B\u5171\u8981\u5206\u6210\u51E0\u4E2A\u5E93\u51E0\u4E2A\u8868\uFF0Cshardingjdbc\u4E0D\u4F1A\u521B\u5EFA\u8868\uFF0C\u9700\u8981sql\u624B\u52A8\u5EFA\u8868\uFF09 -------------------
# \u7531\u6570\u636E\u6E90\u540D + \u8868\u540D\u7EC4\u6210\uFF0C\u4EE5\u5C0F\u6570\u70B9\u5206\u9694\u3002\u591A\u4E2A\u8868\u4EE5\u9017\u53F7\u5206\u9694\uFF0C\u652F\u6301 inline \u8868\u8FBE\u5F0F\u3002\u7F3A\u7701\u8868\u793A\u4F7F\u7528\u5DF2\u77E5\u6570\u636E\u6E90\u4E0E\u903B\u8F91\u8868\u540D\u79F0\u751F\u6210\u6570\u636E\u8282\u70B9\uFF0C\u7528\u4E8E\u5E7F\u64AD\u8868\uFF08\u5373\u6BCF\u4E2A\u5E93\u4E2D\u90FD\u9700\u8981\u4E00\u4E2A\u540C\u6837\u7684\u8868\u7528\u4E8E\u5173\u8054\u67E5\u8BE2\uFF0C\u591A\u4E3A\u5B57\u5178\u8868\uFF09\u6216\u53EA\u5206\u5E93\u4E0D\u5206\u8868\u4E14\u6240\u6709\u5E93\u7684\u8868\u7ED3\u6784\u5B8C\u5168\u4E00\u81F4\u7684\u60C5\u51B5
spring.shardingsphere.rules.sharding.tables.t_user.actual-data-nodes=db_user.t_user
#\u8FD9\u4E48\u914D\u7F6E\u592A\u9EBB\u70E6\u4E86\uFF0C\u7528inline\u8868\u8FBE\u5F0F
#spring.shardingsphere.rules.sharding.tables.t_order.actual-data-nodes=db_order0.t_order0,db_order0.t_order1,db_order1.t_order0,db_order1.t_order1
#inline\u8303\u56F4\u914D\u7F6E
#spring.shardingsphere.rules.sharding.tables.t_order.actual-data-nodes=db_order$->{0..1}.t_order$->{0..1}
#inline\u679A\u4E3E\u914D\u7F6E
spring.shardingsphere.rules.sharding.tables.t_order.actual-data-nodes=db_order$->{[0,1]}.t_order$->{[0,1]}
spring.shardingsphere.rules.sharding.tables.t_order_item.actual-data-nodes=db_order$->{[0,1]}.t_order_item$->{[0,1]}
spring.shardingsphere.rules.sharding.tables.t_dict.actual-data-nodes=db_order$->{[0,1]}.t_dict,db_user.t_dict
#------------------- sharding-jdbc \u6C34\u5E73\u5206\u5E93\u914D\u7F6E\uFF08\u6570\u636E\u8DEF\u7531\u5230\u54EA\u4E2A\u5E93\uFF09 -------------------
# \u5206\u5E93\u7B56\u7565\uFF0C\u7F3A\u7701\u8868\u793A\u4F7F\u7528\u9ED8\u8BA4\u5206\u5E93\u7B56\u7565\uFF0C\u4EE5\u4E0B\u7684\u5206\u7247\u7B56\u7565\u53EA\u80FD\u9009\u5176\u4E00

# t_order
# \u5206\u7247\u5217\u540D\u79F0
spring.shardingsphere.rules.sharding.tables.t_order.database-strategy.standard.sharding-column=user_id
# \u5206\u7247\u7B97\u6CD5\u540D\u79F0
spring.shardingsphere.rules.sharding.tables.t_order.database-strategy.standard.sharding-algorithm-name=alg_mod

# t_order_item
spring.shardingsphere.rules.sharding.tables.t_order_item.database-strategy.standard.sharding-column=user_id
spring.shardingsphere.rules.sharding.tables.t_order_item.database-strategy.standard.sharding-algorithm-name=alg_mod

#------------------- sharding-jdbc \u6C34\u5E73\u5206\u8868\u914D\u7F6E\uFF08\u6570\u636E\u8DEF\u7531\u5230\u54EA\u4E2A\u8868\uFF09 -------------------
# t_order
# \u5206\u7247\u5217\u540D\u79F0
spring.shardingsphere.rules.sharding.tables.t_order.table-strategy.standard.sharding-column=order_no
# \u5206\u7247\u7B97\u6CD5\u540D\u79F0
spring.shardingsphere.rules.sharding.tables.t_order.table-strategy.standard.sharding-algorithm-name=alg_hash_mod

# t_order_item
spring.shardingsphere.rules.sharding.tables.t_order_item.table-strategy.standard.sharding-column=order_no
spring.shardingsphere.rules.sharding.tables.t_order_item.table-strategy.standard.sharding-algorithm-name=alg_hash_mod

#------------------- sharding-jdbc \u5206\u5E03\u5F0F\u5E8F\u5217\u7B56\u7565\u914D\u7F6E -------------------
# t_order
# \u5206\u5E03\u5F0F\u5E8F\u5217\u5217\u540D\u79F0
spring.shardingsphere.rules.sharding.tables.t_order.key-generate-strategy.column=id
# \u5206\u5E03\u5F0F\u5E8F\u5217\u7B97\u6CD5\u540D\u79F0
spring.shardingsphere.rules.sharding.tables.t_order.key-generate-strategy.key-generator-name=my_snowflake

# t_order_item
spring.shardingsphere.rules.sharding.tables.t_order_item.key-generate-strategy.column=id
spring.shardingsphere.rules.sharding.tables.t_order_item.key-generate-strategy.key-generator-name=my_snowflake

#------------------- sharding-jdbc \u7ED1\u5B9A\u8868 -------------------
# tables[0]\u548Ctables[1]\u6CA1\u6709\u4EFB\u4F55\u5173\u7CFB\u3002\u7ED1\u5B9A\u8868\u53EF\u4EE5\u914D\u7F6E\u591A\u7EC4\uFF0C\u522B\u7684\u4E1A\u52A1\u8868\u4E5F\u53EF\u4EE5\u914D\u7F6E\u7ED1\u5B9A\u8868\uFF0C\u4F46\u662F\u914D\u7F6E\u6587\u4EF6\u7684key\u662F\u4E0D\u80FD\u91CD\u590D\u7684\uFF0C\u6240\u4EE5\u7528\u6570\u7EC4\u533A\u5206\u800C\u5DF2\u3002
spring.shardingsphere.rules.sharding.binding-tables[0]=t_order,t_order_item

#------------------- sharding-jdbc \u5E7F\u64AD\u8868 -------------------
spring.shardingsphere.rules.sharding.broadcast-tables[0]=t_dict
#============================== sharding-jdbc \u516C\u5171 ==============================
#------------------- sharding-jdbc \u5206\u7247\u7B97\u6CD5\u914D\u7F6E -------------------
# alg_inline_user_id\u968F\u4FBF\u586B\uFF0C\u5C31\u662F\u5206\u7247\u7B97\u6CD5\u7684\u540D\u79F0\u3002
# \u5206\u7247\u7B97\u6CD5\u7C7B\u578B\u548C\u5C5E\u6027\u53D6\u503C\uFF0C\u53C2\u8003\uFF1Ahttps://shardingsphere.apache.org/document/5.1.1/cn/user-manual/shardingsphere-jdbc/builtin-algorithm/sharding/

# \u884C\u8868\u8FBE\u5F0F\u5206\u7247\u7B97\u6CD5
spring.shardingsphere.rules.sharding.sharding-algorithms.alg_inline_user_id.type= INLINE
# \u5206\u7247\u7B97\u6CD5\u5C5E\u6027\u914D\u7F6E\uFF0C
spring.shardingsphere.rules.sharding.sharding-algorithms.alg_inline_user_id.props.algorithm-expression=db_order$->{user_id % 2}

# \u53D6\u6A21\u5206\u7247\u7B97\u6CD5\uFF0C\u548C\u884C\u8868\u8FBE\u5F0F\u5206\u7247\u7B97\u6CD5\u5B9E\u73B0\u7684\u6548\u679C\u662F\u4E00\u81F4\u7684
spring.shardingsphere.rules.sharding.sharding-algorithms.alg_mod.type= MOD
# \u5206\u7247\u7B97\u6CD5\u5C5E\u6027\u914D\u7F6E\uFF0C
spring.shardingsphere.rules.sharding.sharding-algorithms.alg_mod.props.sharding-count=2

# \u54C8\u5E0C\u53D6\u6A21\u5206\u7247\u7B97\u6CD5
spring.shardingsphere.rules.sharding.sharding-algorithms.alg_hash_mod.type= HASH_MOD
# \u5206\u7247\u7B97\u6CD5\u5C5E\u6027\u914D\u7F6E\uFF0C
spring.shardingsphere.rules.sharding.sharding-algorithms.alg_hash_mod.props.sharding-count=2

#------------------- sharding-jdbc \u5206\u5E03\u5F0F\u5E8F\u5217\u7B97\u6CD5\u914D\u7F6E -------------------
# \u5206\u5E03\u5F0F\u5E8F\u5217\u7B97\u6CD5\u7C7B\u578B
spring.shardingsphere.rules.sharding.key-generators.my_snowflake.type=SNOWFLAKE


#------------------- sharding-jdbc \u5185\u5B58\u6A21\u5F0F -------------------
#\u6A21\u5F0F\u5339\u914D \u5185\u5B58\u6A21\u5F0F
spring.shardingsphere.mode.type=Memory

#------------------- sharding-jdbc \u5176\u4ED6 -------------------
# \u6253\u5370SQL
spring.shardingsphere.props.sql-show=true
